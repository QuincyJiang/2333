apply plugin: 'com.android.application'
apply plugin: 'signing'
boolean isModuleMode = project.hasProperty("isModule") ? isModule.toBoolean() : false
def packer = rootProject.ext.android
android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.dida.kuaila"
        minSdkVersion 14
        targetSdkVersion 27
        versionCode packer.versionCode
        versionName packer.versionName
        flavorDimensions "versionCode"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
               arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    signingConfigs {
        releaseConfig {
            storeFile file("../kuaila2")
            storePassword project.hasProperty("KEYSTORE_PASS") ? KEYSTORE_PASS : System.getenv("KEYSTORE_PASS")
            keyAlias project.hasProperty("ALIAS_NAME") ? ALIAS_NAME : System.getenv("ALIAS_NAME")
            keyPassword project.hasProperty("ALIAS_PASS") ? ALIAS_PASS : System.getenv("ALIAS_PASS")
    }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    productFlavors {
        Kuan {
        }
        Wandoujia {
        }
        play {

        }
    }
    dataBinding {
        enabled true
    }
    android.applicationVariants.all{ variant ->
        variant.outputs.all {output ->
            def outputFile = output.outputFile
            if(outputFile !=null && outputFile.name.endsWith('.apk')){
                def fileName = "kuaila-${variant.productFlavors[0].name}-${variant.buildType.getName()}-${packer.versionName}-${packer.buildTime}.apk"
                outputFileName = fileName
//                variant.packageApplication.outputDirectory = new File(project.rootDir.absolutePath+"/apks")
            }
        }
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':commonservicelib')
    implementation project(':dependencylib')
    if(!isModuleMode) {
        implementation project(':funnystorymodule')
        implementation project(':homepagemodule')
        implementation project(':loginmodule')
        implementation project(':sharemodule')
        implementation project(':userspagemodule')
        //router
        annotationProcessor 'com.alibaba:arouter-compiler:1.2.1'
    }
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.1'
}
