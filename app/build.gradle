apply plugin: 'com.android.application'
apply plugin: 'signing'
def packer = rootProject.ext.android
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.dida.kuaila"
        minSdkVersion 14
        targetSdkVersion 27
        versionCode packer.versionCode
        versionName packer.versionName
        flavorDimensions "versionCode"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        releaseConfig {
            storeFile file("../kuaila2")
            storePassword keystoreProperties['KEYSTORE_PASS']!=null ? keystoreProperties['KEYSTORE_PASS'] : System.getenv("KEYSTORE_PASS")
            keyAlias keystoreProperties['ALIAS_NAME']!=null ? keystoreProperties['ALIAS_NAME'] : System.getenv("ALIAS_NAME")
            keyPassword keystoreProperties['ALIAS_PASS']!=null ? keystoreProperties['ALIAS_PASS'] : System.getenv("ALIAS_PASS")
    }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    productFlavors {
        Kuan {
        }
        Wandoujia {
        }
        play {

        }
    }
    dataBinding {
        enabled true
    }
    android.applicationVariants.all{ variant ->
        variant.outputs.all {output ->
            def outputFile = output.outputFile
            if(outputFile !=null && outputFile.name.endsWith('.apk')){
                def fileName = "kuaila-${variant.productFlavors[0].name}-${variant.buildType.getName()}-${packer.versionName}-${packer.buildTime}.apk"
                outputFileName = fileName
                variant.packageApplication.outputDirectory = new File(project.rootDir.absolutePath+"/apks")
            }
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
