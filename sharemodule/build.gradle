boolean isModuleMode = project.hasProperty("isModule") ? isModule.toBoolean() : false
if (isModuleMode) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion deps.sdk.compile
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        minSdkVersion deps.sdk.min
        targetSdkVersion deps.sdk.target
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    signingConfigs {
        releaseConfig {
            storeFile file("../kuaila2")
            storePassword project.hasProperty("KEYSTORE_PASS") ? KEYSTORE_PASS : System.getenv("KEYSTORE_PASS")
            keyAlias project.hasProperty("ALIAS_NAME") ? ALIAS_NAME : System.getenv("ALIAS_NAME")
            keyPassword project.hasProperty("ALIAS_PASS") ? ALIAS_PASS : System.getenv("ALIAS_PASS")
        }
        debug {
            storeFile file("../kuaila2")
            storePassword project.hasProperty("KEYSTORE_PASS") ? KEYSTORE_PASS : System.getenv("KEYSTORE_PASS")
            keyAlias project.hasProperty("ALIAS_NAME") ? ALIAS_NAME : System.getenv("ALIAS_NAME")
            keyPassword project.hasProperty("ALIAS_PASS") ? ALIAS_PASS : System.getenv("ALIAS_PASS")
        }
    }

    dataBinding {
        enabled = true
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }
    sourceSets {
        main {
            if (isModuleMode) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    exclude 'debug/**'
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':commonservicelib')
    implementation project(':dependencylib')
    //router
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.1'
    //以下SDK开发者请根据需要自行选择
    //bmob-sdk：Bmob的android sdk包，包含了Bmob的数据存储、文件等服务，以下是最新的bmob-sdk:
    //3.5.5：请务必查看下面注释[1]
    implementation 'cn.bmob.android:bmob-sdk:3.6.3'

    //bmob-push：Bmob的推送包
    implementation 'cn.bmob.android:bmob-push:0.8'

    //如果你想应用能够兼容Android6.0，请添加此依赖(org.apache.http.legacy.jar)
    implementation 'cn.bmob.android:http-legacy:1.0'
}
